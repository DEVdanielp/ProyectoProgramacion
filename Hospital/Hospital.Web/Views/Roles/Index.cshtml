@using Hospital.Web.Core

@model PaginationResponse<HospitalRole>
@inject Hospital.Web.Services.IUsersService _usersService

@{
    ViewData["Title"] = "Roles";
}

    <div class="pagetitle">
        <h1>Roles</h1>
        <nav>
            <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Inicio</a></li>
                <li class="breadcrumb-item active">Roles</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->

<section class="section dashboard">
    <div class="card">

        <div class="card-header">
            <div class="row">

                <h3 class="m-0 font-weight-bold text-primary col-md-11">Roles</h3>

                @if (await _usersService.CurrentUserIsAuthorizedAsync("createRoles", "Roles"))
                {  

                    <div class="col-md-1">
                        <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle"></i></a>
                    </div>
                 } 
            </div>
            
        </div>

        <div class="card-body mt-2">

            <form class="navbar-search" asp-action="Index" method="GET">

                <input type="hidden" name="Page" value="@Model.CurrentPage" />
                <input type="hidden" name="RecordsPerPage" value="@Model.RecordsPerPage" />

                <div class="input-group mb-3">

                    <input type="text" class="form-control bg-light border-0 small" placeholder="Buscar..." aria-label="Serch" asp-form="@Model.Filter" name="Filter" />

                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>

                </div>

            </form>


            <!-- Tabla usada -->
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Rol</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
           
                @* esto lo que hace es que el rol super admin no sea editado o eliminado  *@
                @foreach (var item in Model.List)
                {
                    <tr>
                        <td> @Html.DisplayFor(modelItem => item.Name) </td>

                        <td>
                            @if (item.Name != Env.SUPER_ADMIN_ROLE_NAME)
                            {
                                @if (await _usersService.CurrentUserIsAuthorizedAsync("updateRoles", "Roles"))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i class="bi bi-pencil-fill"></i></a>
                                }
                                @if (await _usersService.CurrentUserIsAuthorizedAsync("deleteRoles", "Roles"))
                                {
                                    <form asp-action="Delete" asp-route-id="@item.Id" style="display:contents">
                                        <button class="btn btn-danger btn-sm btnDelete"><i class= "bi bi-trash-fill"></i></button>
                                    </form>
                                }

                            }
                        </td>




                    </tr>
                }
                </tbody>
            </table>
            <!-- Tabla usada-->


            <nav aria-label="">

                <ul class="pagination justify-content-center">

                    @* Primero *@
                    <li class="page-item">
                        <a class="page-link  @(Model.CurrentPage == 1 ? "disabled" : "")"
                           asp-action="Index"
                           asp-route-Page="1"
                           asp-route-Filter="@Model.Filter"
                           asp-route-RecordsPerPage="@Model.RecordsPerPage">
                            &laquo;
                        </a>
                    </li>

                    @* Anterior *@
                    <li class="page-item">
                        <a class="page-link  @(!Model.HasPrevious ? "disabled" : "")"
                           asp-action="Index"
                           asp-route-Page="@(Model.CurrentPage - 1)"
                           asp-route-Filter="@Model.Filter"
                           asp-route-RecordsPerPage="@Model.RecordsPerPage">
                            &lsaquo;
                        </a>
                    </li>

                    @* Páginas *@
                    @foreach (int page in Model.Pages)
                    {
                        <li class="page-item">
                            <a class="page-link  @(Model.CurrentPage == page ? "disabled" : "")"
                               asp-action="Index"
                               asp-route-Page="@(page)"
                               asp-route-Filter="@Model.Filter"
                               asp-route-RecordsPerPage="@Model.RecordsPerPage">
                                @(page)
                            </a>
                        </li>
                    }

                    @* Siguiente *@
                    <li class="page-item">
                        <a class="page-link  @(!Model.HasNext ? "disabled" : "")"
                           asp-action="Index"
                           asp-route-Page="@(Model.CurrentPage + 1)"
                           asp-route-Filter="@Model.Filter"
                           asp-route-RecordsPerPage="@Model.RecordsPerPage">
                            &rsaquo;
                        </a>
                    </li>

                    @* Último *@
                    <li class="page-item">
                        <a class="page-link  @(Model.TotalPages == Model.CurrentPage ? "disabled" : "")"
                           asp-action="Index"
                           asp-route-Page="@(Model.TotalPages)"
                           asp-route-Filter="@Model.Filter"
                           asp-route-RecordsPerPage="@Model.RecordsPerPage">
                            &raquo;
                        </a>
                    </li>

                </ul>

            </nav>



        </div>
    </div>
</section>

@section Scripts {
    <script>

        $(document).ready(function(){

            $('.btnDelete').click(function(event){

                event.preventDefault();

               Swal.fire({
              title: "¿Estás seguro de eliminar este rol?",
              text: "No podras revertir este cambio",
              icon: "question",
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: "Si, eliminar",
              cancelButtonText: "No, eliminar"

            }).then((result) => {

              if (result.isConfirmed) {

                  const deleteForm = $(this).closest('form');
                  deleteForm.submit();

              }

            });

            })

        })

    </script>
}